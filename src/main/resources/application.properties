# ===============================
# = DATA SOURCE
# ===============================
# Connection url for the database connection
 spring.datasource.driver-class-name=com.mysql.jdbc.Driver
 spring.datasource.url = jdbc:mysql://localhost:3306/world

# Username and password
spring.datasource.username = root
spring.datasource.password = root

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project

# to generate the ddl set to true else false
# spring.jpa.generate-ddl = true

# set this to none for avoding creation of the database else set it to update for new database creation or updation of the value
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming.physical-strategy= org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# Configuring logs of the application
# Available levels are: TRACE, DEBUG, INFO, WARN, ERROR, FATAL, OFF
logging.level.com = DEBUG,WARN

# Specify the level for spring boot and hibernate's loggers
logging.level.org.springframework.web = WARN

# Log file location (in addition to the console)
logging.file = D:/logs/Database_app.log
logging.file.max-size=20MB
logging.pattern.file=[%d{yyyy-MM-dd HH:mm:ss}] [%-5p] %c{1}:%L - %m%n
logging.pattern.console=[%d{yyyy-MM-dd HH:mm:ss}] [%-5p] %c{1}:%L - %m%n
